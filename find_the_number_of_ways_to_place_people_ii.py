"""
LeetCode
3025. Find the Number of Ways to Place People II
September 2025 Challenge
jramaswami
"""


from typing import List


class Solution:
    def numberOfPairs(self, points: List[List[int]]) -> int:
        def has_upper_left(x1, y1, x2, y2):
            if x1 > x2:
                x1, y1, x2, y2 = x2, y2, x1, y1
            # Invariant x1 <= x2
            # Horizontal line is ok
            if x1 == x2:
                return True
            # Vertical line is ok
            if y1 == y2:
                return True
            # x1 is < x2, so y1 has to be more than y2
            return y1 > y2
        points.sort()

        soln = 0
        for i, (x1, y1) in enumerate(points):
            previous_ys = []  # Monotonic
            for j, (x2, y2) in enumerate(points[i+1:], start=i+1):
                # We have to have Alice in top left.  We sorted the
                # list so x1 <= x2.  y2 will invalidate any previous y
                # where y2 <= y.  Use a monotonic list to keep track
                # of how many ys we can use as Bob's location.
                if y1 >= y2:
                    if (not previous_ys) or (previous_ys[-1] < y2):
                        previous_ys.append(y2)
            soln += len(previous_ys)

        return soln


def test_1():
    points = [[1,1],[2,2],[3,3]]
    expected = 0
    assert Solution().numberOfPairs(points) == expected


def test_2():
    points = [[6,2],[4,4],[2,6]]
    expected = 2
    assert Solution().numberOfPairs(points) == expected


def test_3():
    points = [[3,1],[1,3],[1,1]]
    expected = 2
    assert Solution().numberOfPairs(points) == expected


def test_4():
    """TLE"""
    points = [[36611,-7461],[-72990,43739],[-38859,90024],[67139,-70998],[40068,86698],[-44070,32222],[49200,-2406],[-35532,-47089],[6270,-56307],[12507,-65957],[37712,80063],[69641,-47052],[98134,98155],[-86136,-89877],[-5429,29876],[9156,60445],[-99259,38962],[-47297,-21387],[96776,-93783],[-71950,-58139],[-70937,72316],[69284,63573],[-29702,18853],[-43630,-92381],[-13524,-27063],[-56435,-38670],[25483,-38876],[-91950,-74271],[48799,9760],[-91620,37969],[23695,-71130],[7063,-49884],[-9653,59924],[42408,97999],[-90717,-43407],[89983,-88349],[-9603,-6782],[9307,-35570],[15659,31360],[-74403,-67073],[59343,-70124],[-69137,36074],[-18295,-99042],[50295,-77451],[10848,-73546],[95287,49562],[-5510,17694],[54166,10891],[24332,-30171],[-60016,-20712],[86312,38170],[-64811,56856],[-54891,-87928],[99301,-22240],[-6228,-84827],[-71720,97693],[-89276,69104],[-87171,94674],[67538,-6018],[81517,-44388],[69182,-43151],[-66431,-85847],[-39148,3681],[-42363,-72716],[99071,32661],[35802,10241],[33812,-46561],[13891,58553],[-58839,-41200],[-15491,-63820],[89760,-44383],[-57803,-26744],[-96266,-12849],[-23949,-44120],[13142,92467],[90912,8509],[-26300,-82716],[-89576,85468],[13638,94094],[-4345,86731],[90424,-61450],[33499,-41003],[37156,67801],[25556,-21934],[12456,3629],[71914,-97309],[99101,-86030],[-77202,-29493],[-13325,-82218],[-1074,4483],[58667,17884],[-49140,-89388],[583,16383],[-35446,6258],[10513,-78075],[-70362,845],[8626,60320],[-6571,-92734],[-55255,-38232],[68106,81248],[98619,48481],[-84078,82825],[-15611,-26915],[66091,80108],[61146,28014],[4258,35090],[43652,48003],[-66300,-34932],[-41528,32362],[96791,56048],[-6683,-7623],[12133,42424],[72712,8359],[-62581,29626],[84456,42098],[-77788,6234],[-84681,-57062],[63722,50850],[17737,-6172],[14584,70295],[10323,70198],[-53976,-56282],[-81425,-70989],[-79683,-12743],[57885,78430],[72449,-67674],[-62247,-58595],[-34674,60130],[55639,-31576],[25334,18231],[45715,-18842],[-61623,-99894],[3412,-17643],[18381,76461],[-70582,-73402],[54605,-6551],[73536,-45519],[-41727,-10381],[-26878,-99823],[-55558,78136],[27675,29686],[-58293,-9620],[25194,7325],[77111,-16523],[-67263,-57404],[44445,88126],[-42263,-40284],[-2354,99681],[-89329,31564],[72961,30274],[-61263,12344],[65577,-16763],[1859,12214],[-49386,-3216],[-51696,59535],[-35983,54602],[-16934,19561],[98009,25554],[-63019,-52807],[76741,-47256],[99456,22908],[-55713,55823],[-87621,28231],[-88928,-72585],[48675,-69489],[71718,-32097],[-77133,-75348],[3856,-12024],[-39404,-50431],[64115,-70066],[20542,-30338],[76104,68987],[68696,-45505],[-63252,-67789],[-74275,44296],[-69577,-88099],[-89554,-65290],[88340,13936],[15310,42479],[51405,-75141],[1918,87029],[38120,48667],[-71236,-94274],[-3503,-32707],[86415,-50448],[-48957,-86749],[-67251,-68206],[30972,-92856],[40706,2400],[-78331,-81758],[-46871,45535],[96329,99805],[-73923,5682],[-58615,56283],[-20136,-42146],[73651,46030],[-60102,-86972],[37906,-37646],[84950,-88081],[68246,-43558],[-96018,-48426],[-66344,-25514],[-36892,-80882],[90210,14624],[77870,-55607],[27667,64100],[52046,-8565],[-56816,2047],[19783,-57972],[-88547,-60155],[-29924,-2984],[36653,689],[73582,-51800],[-4052,18570],[-1223,-57336],[2360,-48869],[19209,96859],[-54523,-39935],[-96169,-41581],[69667,47203],[18894,-42964],[-40653,-39244],[-62456,-60571],[47436,29234],[-23097,1680],[63663,50559],[55997,-86187],[2958,-79923],[-41595,-61039],[-8122,-75611],[25255,90516],[-35647,-32625],[91070,51058],[-55857,-50399],[70547,-23284],[-57574,-76693],[-78130,-18441],[38546,-19250],[99526,61729],[82799,37178],[-37667,-30993],[-45717,35713],[-84038,-61378],[-93031,83911],[-36523,-92422],[-92393,-62592],[-94753,-3915],[-10912,-40026],[-37883,79092],[-68319,-45453],[16299,-95103],[51385,-98958],[-22626,-36759],[-20476,55208],[-92124,-28030],[64002,-55692],[-97245,28876],[93992,-30114],[-18364,-22038],[-42353,-91395],[7304,-58876],[81430,22452],[-58687,-67588],[-34396,19856],[22813,-41220],[-85122,97036],[-93209,-21942],[59457,-80323],[-86661,6580],[42576,25342],[-81869,-35943],[-17152,-92760],[92120,56953],[59707,22390],[86306,76454],[32939,-71758],[17,-90877],[-35088,-1894],[-47802,81019],[-69930,12953],[-19698,-49488],[-68704,49140],[33135,14755],[19977,93268],[-84788,-73110],[18735,-18217],[-27410,-12639],[11037,94930],[20551,-71930],[-67339,2171],[2133,-7768],[-93702,15974],[27545,-69483],[-8521,13051],[-95924,-5810],[36561,76958],[93300,-22363],[85471,-11532],[95338,86421],[-70437,-1808],[-27081,23476],[74368,97291],[45490,39157],[-92326,-59360],[-42180,-93726],[-57111,86234],[-71050,-3405],[-74739,36069],[13897,-54959],[59054,16782],[20579,26705],[-13034,77066],[-64790,26983],[59847,71411],[-45097,5285],[51641,46628],[-58309,-10333],[-88934,-98046],[-79077,-88951],[-77310,-59230],[-20303,-81400],[13803,55643],[-4172,29808],[45881,-60637],[32845,-62861],[35795,96517],[52142,61575],[-28283,-82951],[-70087,25610],[71519,76208],[-62932,-30277],[-44968,-66869],[-3874,6598],[48189,22450],[29994,59366],[-80284,63107],[-15111,-79262],[-44867,-11509],[-65928,-4061],[-6492,54868],[-21829,-44496],[76529,26879],[46560,-62995],[35287,-60430],[-84085,8151],[-66122,-4713],[52507,70288],[25608,22936],[7578,-88225],[-72711,87956],[14432,-15710],[-42332,96878],[-20116,64751],[30516,47676],[11733,-82170],[-73662,51239],[-3846,-1340],[8760,-23627],[16583,-56199],[-94762,-60415],[55114,-16836],[-86701,27449],[-23043,8735],[-71471,-99353],[-12722,-75059],[-76322,3710],[22091,11891],[36886,55378],[55651,11055],[12466,62010],[85274,-92764],[87256,1308],[18701,-89728],[15016,-46605],[-79590,-20942],[46696,89541],[-62566,-60463],[-27090,86760],[79048,-67868],[38083,-59764],[-81921,17085],[72373,-16481],[-13492,-33336],[-99581,-58734],[-67930,-56056],[-64619,38811],[32268,-77867],[-73169,-23261],[-9921,-12425],[11465,59035],[-83905,52504],[-40051,-46808],[73770,44742],[-83086,-69112],[52223,-1996],[-96575,63936],[-52844,88469],[-48946,-50024],[44860,45099],[-89198,29000],[55228,66289],[77677,-60667],[73091,-71063],[35887,97835],[-67826,59337],[47104,-23333],[60970,28457],[-17488,85150],[59987,56362],[-94569,-71359],[-64460,6317],[88704,34624],[-21139,20710],[-74821,-20196],[-31246,-47336],[95753,-33063],[724,-96330],[94056,56409],[90846,-26990],[-15306,-38984],[84121,-14918],[-24388,32598],[-35860,77577],[11929,47487],[-4321,95682],[84914,57598],[-85424,-91380],[-88171,58225],[55775,-33335],[-38831,-24751],[96461,-88904],[51111,65754],[75695,57280],[26883,-89582],[91709,35454],[64704,98670],[77823,-24446],[-34393,75166],[28098,-80427],[76274,-96000],[84172,-81870],[-62355,-94220],[-51052,73581],[-93892,-6771],[97188,-43308],[-67084,-42986],[11122,-71370],[96510,-53594],[-45461,-67048],[-28892,-57263],[46109,84444],[280,-40089],[-51941,89272],[77427,-45975],[82070,-92835],[28214,95053],[-76156,29952],[-80119,-86313],[-33125,78383],[76061,32190],[47362,61661],[-22922,-49125],[-19297,-8439],[-39087,-91757],[56601,51060],[54703,-49446],[8192,-39854],[9490,-23827],[-22341,-5547],[-34901,80011],[49941,64055],[66772,-18910],[-33979,-27886],[-65469,-71774],[11781,52734],[93566,-80546],[-28205,20436],[58796,59744],[28486,18877],[-25637,-3900],[-70677,60412],[-28833,-69450],[68503,-98470],[-55934,-49304],[43606,15475],[38819,26817],[-68149,-18506],[-70202,5234],[17248,16592],[49314,-27815],[-94690,73601],[44806,-26151],[-99824,-99847],[-14024,-93139],[92749,89029],[-63946,-94087],[94934,9730],[88801,26052],[28885,-30313],[31063,-50613],[56216,5141],[68271,37144],[-69200,88040],[-33543,99559],[-6570,-16643],[-85502,-91194],[-72973,3405],[-82297,9686],[99786,-52448],[46301,63529],[-30696,43817],[67223,60845],[9679,94577],[-30685,-30856],[-89639,85989],[-31174,73628],[-84725,7703],[-46184,86131],[90429,65732],[42073,77032],[2858,-99096],[-15098,-18561],[-15243,2135],[82691,-63671],[-28165,56662],[74477,-98833],[-41120,96172],[-60669,83739],[32129,-10159],[90761,-85595],[24227,-68732],[92663,-64151],[-99242,-27742],[-36716,-29558],[95486,-23144],[-99202,59409],[-1047,-40664],[-33552,-57976],[20275,-71045],[-38329,2615],[-85497,-62959],[-68381,-67323],[-33885,78881],[-56318,69409],[18472,42289],[-86318,-46698],[-7797,-81831],[90805,-96428],[75667,39485],[-44587,-49941],[-16362,60558],[24797,39341],[78538,11894],[-79998,87646],[-44733,89162],[-47477,24818],[3761,80955],[-26370,-44790],[96870,13652],[41429,500],[-58658,61192],[-54113,37473],[-99485,61804],[-82186,-66304],[-30862,-41389],[20734,55299],[93834,-636],[2552,-61815],[23820,-391],[95346,21789],[-56615,83515],[-88640,70706],[49975,-4634],[-37869,61717],[-26135,95530],[3543,64555],[3481,8751],[9534,62197],[80374,69329],[19379,25946],[-20951,43722],[89824,-73216],[-92964,-1341],[-26054,39910],[-98574,11833],[29497,-908],[16038,58066],[-71026,-95682],[-57903,7980],[-40500,-90873],[-59623,-11017],[-51616,18687],[76469,13104],[-22011,-65704],[-4934,88013],[-37754,-18429],[-21536,-14909],[-6574,17813],[-35181,-94413],[58548,59804],[-25804,-95294],[77499,79039],[22733,58490],[-62946,-98180],[31727,43342],[19131,20230],[-83830,10252],[53313,-52701],[95294,-27527],[-78972,50901],[-68866,-9564],[-21733,3084],[26988,-82072],[708,-32401],[62696,21442],[-43284,-24079],[-46215,36725],[74189,24894],[62173,14922],[-67463,70347],[-91531,-16195],[51157,-35374],[-51856,10573],[-3361,2320],[-32502,-73705],[-80627,66793],[26173,-36284],[-43408,2232],[-82908,38297],[23645,66605],[81002,29312],[-42190,-49274],[22011,70094],[-77015,96461],[-17380,17063],[7660,73635],[79819,70194],[52552,-54070],[-43053,-43820],[-17722,-24076],[66840,41062],[5110,87630],[-32096,921],[76440,-95065],[85284,55246],[-4969,90039],[17962,66615],[-30930,-84019],[-4707,-98072],[83037,-33339],[-31842,37990],[78040,33371],[-10728,42290],[-84916,57450],[96940,-34957],[11494,-15185],[97639,26151],[-96343,-89372],[89164,-63155],[86596,-90930],[-43240,49814],[1821,-66169],[-37743,-12690],[-10741,54607],[13402,82460],[-68311,94071],[-75656,-34161],[-7515,37169],[-90236,5],[-98570,2216],[13785,-45117],[83561,-23897],[-86131,-50592],[75389,51394],[-49250,13741],[35774,-6395],[-39133,-93615],[40299,-93376],[-91961,-46506],[60022,-39698],[-47367,-38263],[-27761,63823],[59913,45403],[-33426,46606],[-52239,-52499],[19368,-21785],[-54823,47252],[-48317,-62134],[-35477,62956],[-88998,85047],[12827,-83597],[-39590,23160],[27983,11859],[-9676,36608],[-72071,-94772],[81444,25492],[-84047,39069],[95800,99131],[-49509,66855],[-50185,82921],[78185,45730],[-3942,-51323],[-847,48373],[96543,18599],[8337,6558],[-40563,20025],[-98728,-69904],[-39668,42810],[15946,62217],[-78583,96842],[-10807,19195]]
    expected = 3598
    assert Solution().numberOfPairs(points) == expected


def test_5():
    "WA"
    points = [[2,6],[2,4]]
    expected = 1
    assert Solution().numberOfPairs(points) == expected