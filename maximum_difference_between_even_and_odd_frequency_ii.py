"""
LeetCode
3445. Maximum Difference Between Even and Odd Frequency II
June 2025 Challenge
jramaswami
"""


class Solution:
    def maxDifference(self, s: str, k: int) -> int:

        def is_odd_freq(x):
            return x % 2 == 1

        def is_even_freq(x):
            return x > 0 and x % 2 == 0

        # There are only five characters
        chars = ['0', '1', '2', '3', '4', '5']
        soln = -pow(10, 10)
        for odd_char in chars:
            for even_char in chars:
                if odd_char == even_char:
                    continue
                for start in range(0, len(s)):
                    odd_char_freq = even_char_freq = 0
                    for end in range(start, len(s)):
                        curr_char = s[end]
                        if curr_char == odd_char:
                            odd_char_freq += 1
                        elif curr_char == even_char:
                            even_char_freq += 1
                        if end - start + 1 >= k and is_odd_freq(odd_char_freq) and is_even_freq(even_char_freq):
                            soln = max(soln, odd_char_freq - even_char_freq)
        return soln


def test_1():
    s = "12233"
    k = 4
    expected = -1
    assert Solution().maxDifference(s, k) == expected


def test_2():
    s = "1122211"
    k = 3
    expected = 1
    assert Solution().maxDifference(s, k) == expected


def test_3():
    s = "110"
    k = 3
    expected = -1
    assert Solution().maxDifference(s, k) == expected


def test_4():
    s = "2421"
    k = 1
    expected = -1
    assert Solution().maxDifference(s, k) == expected


def test_5():
    "TLE"
    s
    k = 1742
    expected = 75
    assert Solution().maxDifference(s, k) == expected