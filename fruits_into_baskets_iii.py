"""
LeetCode
3479. Fruits Into Baskets III
August 2025 Challenge
jramaswami
"""


from typing import List


class Solution:
    def numOfUnplacedFruits(self, fruits: List[int], baskets: List[int]) -> int:
        block_size = 500
        q, r = divmod(len(baskets), block_size)
        block_count = q
        if r:
            block_count += 1
        block_maxes = [0 for _ in range(block_count)]
        for i, basket in enumerate(baskets):
            block_index = i // block_size
            block_maxes[block_index] = max(block_maxes[block_index], basket)

        def update_block(block_index, fruit):
            fruit_placed = False
            curr_max = 0
            start_index = block_index * block_size
            end_index = min(len(baskets), start_index + block_size)
            for i in range(start_index, end_index):
                if not fruit_placed and baskets[i] >= fruit:
                    baskets[i] = -1
                    fruit_placed = True
                curr_max = max(curr_max, baskets[i])
            block_maxes[block_index] = curr_max

        placed = 0
        for fruit in fruits:
            for block_index, block_max in enumerate(block_maxes):
                if fruit <= block_max:
                    placed += 1
                    update_block(block_index, fruit)
        return len(fruits) - placed


def test_1():
    fruits = [4,2,5]
    baskets = [3,5,4]
    expected = 1
    assert Solution().numOfUnplacedFruits(fruits, baskets) == expected


def test_2():
    fruits = [3,6,1]
    baskets = [6,4,7]
    expected = 0
    assert Solution().numOfUnplacedFruits(fruits, baskets) == expected


def test_3():
    "WA"
    fruits = [567,347,744,482,918,838,540,584,641,898,259,366,903,917,238,808,551,507,82,479,757,161,242,438,627,695,739,116,700,677,164,842,645,909,690,838,934,474,634,555,827,282,39,978,52,763,438,104,904,717,375,966,67,199,614,249,136,597,149,470,262,488,845,118,409,517,408,278,787,863,261,865,473,851,171,603,968,571,346,836,242,417,723,668,939,760,798,774,587,81,557,218,954,659,151,532,726,790,995,628,926,480,906,52,745,566,895,318,624,906,845,931,383,579,266,254,77,590,76,249,630,301,167,915,511,821,731,355,626,773,628,409,614,192,761,428,176,481,629,612,636,283,554,514,534,156,365,269,420,222,800,466,633,609,432,910,311,948,485,485,538,547,790,772,948,386,931,801,116,252,635,449,328,634,761,826,608,437,232,498,120,411,855,821,459,736,368,712,929,250,875,216,569,913,193,606,990,70,712,165,786,640,934,277,703,570,891,589,582,649,502,660,9,599,137,703,874,668,997,719,920,224,960,180,814,725,361,264,724,506,804,642,91,891,434,967,65,398,398,220,911,846,876,378,507,443,527,989,840,454,595,144,435,606,606,458,987,294,149,714,936,763,852,956,68,615,615,959,327,353,632,457,718,610,828,814,973,591,891,409,719,62,747,850,497,570,531,860,675,356,853,879,100,465,436,47,605,785,247,95,695,670,148,275,407,466,146,407,348,275,521,628,697,266,568,55,458,803,925,131,649,112,667,500,636,799,305,276,580,56,669,821,985,453,482,962,483,434,873,833,961,369,999,735,753,332,711,322,462,421,979,558,947,720,770,314,121,922,516,496,587,106,667,764,336,921,944,828,210,919,797,663,265,456,528,77,684,978,109,98,643,716,542,432,847,861,747,71,274,162,510,567,779,266,180,995,428,898,789,430,590,199,803,530,731,528,438,798,552,879,591,821,665,261,641,930,851,650,683,997,334,693,637,505,436,151,450,213,478,405,430,594,790,454,267,338,770,322,414,820,614,525,693,463,148,569,398,715,58,174,784,361,185,518,32,544,69,41,398,725,542,130,821,280,239,203,749,638,536,425,692,226,741,825,708,540,745,809,710,127,557,391,372,594,297,555,515,262,986,362,609,848,796,684,510,334,34,599,445,947,994,421,537,738,427]
    baskets = [64,330,2,437,453,299,37,50,152,286,495,315,439,155,150,7,260,418,70,276,476,167,289,23,338,467,197,320,353,140,358,276,411,116,150,349,396,295,350,245,175,103,230,313,430,460,315,275,175,301,182,364,230,35,488,474,378,329,454,396,76,441,217,475,51,480,56,426,22,205,112,19,273,220,173,248,309,307,317,11,117,306,278,176,192,321,237,333,425,214,134,267,369,36,166,224,420,41,383,37,71,191,47,342,201,304,441,488,338,220,16,102,74,257,264,14,106,168,369,25,468,43,292,146,114,473,442,146,43,411,15,183,432,91,461,396,305,393,305,368,322,25,439,497,415,237,219,97,405,53,1,238,34,122,86,404,126,143,477,192,430,393,398,235,110,177,10,433,445,225,232,475,407,43,73,31,130,379,83,104,85,107,29,307,248,447,462,220,468,232,19,444,444,240,439,28,307,394,219,488,117,421,60,68,476,383,365,345,156,421,382,54,212,6,441,322,280,29,162,304,258,71,22,485,134,133,359,124,430,245,73,108,184,217,204,240,380,9,479,210,113,184,128,429,39,218,418,280,137,365,202,51,88,405,217,13,195,339,64,230,410,391,361,304,256,451,61,62,141,67,189,415,336,189,131,406,324,325,54,153,224,324,188,457,133,100,446,226,346,319,41,350,8,96,171,331,336,115,133,255,140,449,487,410,255,216,319,351,374,131,330,424,155,42,166,42,245,487,110,223,78,341,200,295,4,72,133,396,307,263,52,144,345,30,321,143,418,296,451,191,298,217,483,203,424,161,480,134,18,496,176,470,111,32,175,204,134,308,412,445,468,407,181,178,467,202,414,363,254,251,116,235,324,500,229,471,391,115,218,45,49,390,274,147,230,379,50,310,359,7,158,150,346,111,35,77,215,117,494,130,70,266,314,478,401,171,493,91,495,413,105,7,286,204,174,252,122,2,296,283,208,323,452,102,87,101,47,188,488,223,367,325,387,188,476,234,144,308,336,449,150,265,177,45,221,24,94,101,113,46,440,279,443,127,470,378,2,195,232,155,344,491,248,319,275,372,26,325,90,187,420,232,64,293,381,256,20,360,210,42,243,415,96,125,380,171,181,478,500,232,392,190,447,276,49,99,78,194,89,353,285,61,253,180,250]
    expected = 297
    assert Solution().numOfUnplacedFruits(fruits, baskets) == expected
