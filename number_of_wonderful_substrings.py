"""
LeetCode
1915. Number of Wonderful Substrings
April 2024 Challenge
jramaswami
"""


import itertools


class Solution:
    def wonderfulSubstrings(self, word: str) -> int:

        prefix = []
        prefix_value = 0
        for c in word:
            i = ord(c) - ord('a')
            mask = 1 << i
            prefix_value = prefix_value ^ mask
            prefix.append(prefix_value)

        def get_prefix(i):
            if i < 0:
                return 0
            return prefix[i]

        soln = 0
        for left, _ in enumerate(word):
            for right, _ in enumerate(word[left:], start=left):
                p = prefix[right] ^ get_prefix(left-1)
                if p.bit_count() <= 1:
                    soln += 1
        return soln


def test_1():
    word = "aba"
    expected = 4
    result = Solution().wonderfulSubstrings(word)
    assert expected == result


def test_2():
    word = "aabb"
    expected = 9
    result = Solution().wonderfulSubstrings(word)
    assert expected == result


def test_3():
    word = "he"
    expected = 2
    result = Solution().wonderfulSubstrings(word)
    assert expected == result


def test_4():
    word = "faecdbcjjbjccjgcadeeaeddbibjiiecggbchebffdchbdicacdbcgdchdgeciceghcdhfbdhcaagghhhjichcgfdaijicahcihgdejhdafjghhjjeaeajdbiheegghhbfgdidcbbfgbdihedfgghjejafdbeedadcagcfejaaihihfdgdedibiiaaaajeifcfcjeeahhcgidcigjhafibejcadaegbeejbficdjgcjfjcgefeifcijibdhaaccdigjeafcebjaiciicghbheifebdadhdeceidcaijihhecjcfcdagdjhfabejjaijajdeaehfghehggjhaidibdidggfghejbggcadhfgjfaeehhicbgjeibbhbijhfghiejadefebigahfeheageagejehgbfajjadicggiegbcbeigdjbcijagajgfaihedcfcjgibiicbjegjgadahdeefajjbajdhcchdeiediecefacdabeegedhcfbiefjagacbfbgbdhejieffhjhcifijjfbccdfgdhhjfbdcejefedgihdjcahaggcjdfafciecibacijddbebccefchjbjfhgeghbhgaacehebafbdghdjdjdbiajeaiiccifcdcjhiaadchfagjdbhfhhiddhaehcjeafediehghbjaafiicgfejadcahfdgagfadbaiehaeaaiifcbcegihfbiacaadjjgahibbfijdbhbcfhhgccihdahchdeeahjeabeiegdgjfdgdfabfiajhagfdhhjaafacaihiagacgijfjdfafehicbeaicafciegfbefehddbfbgfhdcdchabgdigbceeiegabggeiafejbbdgjgijdfjiibadgfjehhaehjdhcdghadeejdfaicjdajjbiachaiadcghjfbefhgdfagbjibjfhegcbeiiecaaifiidgidbcbgidfgibhjcgjcifaegfgbifcjdgddadgedhbeidgbagiddfbaedhjefgjgfdbcabjcigahfbjcjhdhccjjhhffjcbhjhaeaiifajhjcfaejehjabeeggfaebjeiaacaabijjbeiggjfbdfcfgjcebbehbhcjjggaefgbdhfaigaagfafegbbahfiaabijcffbjddjefcfhhdbbgdjiiabdeaihfccbbfdaifcjhidfijdjdbaebaibfcijhhcddachacfbgddfejeafeddjabbdgcfibgijbcjjijhagddidhhaijiafbaajgejihadjdcdjagbfghjabdhhbbicgceifddgbjeceejbigjfgdedeejbjhdibjghigegjigghghhedhdadgedgbhebedjgjbjjhfedgbhhaebgaeebiajijdhdcacffbfedcbdebidbhieijdcbcdfjgdejehbgecgjcdcfhihgajjggffbaaheiabbbebjcbhdhaajbhicibgajddceaaacgaighhbaacbcbdbdbfacgiaaaaaiedfhcgfgfhhgeeidhgghfbbaadfegchahjcebacbhibbbjbhechefigefhcdcagjjhbhfggjgejfaceeebfibaegfchdabdjgfdjjcacgiifcdcigcfjbegddafefaiaihcbdgdccgiijejdadehgibbagjeajafaggehdajahfcbadjibdgjjcigccbdeiadijejhcjiihcbjijgabhcjfgaiajjigefiddhjcbjjhijbbgbjjeffedffdefbdbhifcidajichgcdchafcfhffifgcfedgafgdhbcedafabhgaejbhdejadiagibiijbdeeggejigadcedbcfbbbcijhjdhdhjceecjjbbfbegegahefigfeahgjbeddaedeaefeehhdhbcdiafhediejdbgaicahgeedfcffjagfgccbbfaajadaeijegfffjiidhgiiadiecbhifeicigjegijecgdjihfbjabigfhbjeejbfghfddehechdjffdbadieibjdddeaejhgijhhihejjcibbaaagbihcagifcjhebhgcjdejgabjjabgbfbbigbjccggbegfcfebfbcjaffhgcjfadaeggcajbgegdejhbfjiehbfgacdgaedeicigeejjgfijjjcgdjaeiadgjhgcdjfgdeagfcfdaicffifgbfdjbebeeadcdbdihjfijiiehbchhbdbbjgcgaejcefacjahcgaeajajejehhbdadihbcjfihaejjbabegbiehjhiccdacjaacdgcbfabgfeifchacbegffhccdgihbbbdcjihibjbjjdbgcfjcehedfjfahajbcfbfdhcgbjdcacbbafejafdciideecfacdhcjdbaigcieghigjfhacfeaifjifchdiggijcfaihhbaifcfjiafhffebbdcfhhacgadhcdcfcieifiifdjhhgjjiicbjjjijahcjijehbghfbbigiaieheiehbdfagijaghhjbfgbbdiajiadbddhbcidahiejehcgcjdegfidhhhcebgfhcifagjdiigicdedfjcifdbcfejifcihjgjeggbfifgbeeejcjfadadafghhhgaifegcajffcceedaejbdidhjajhabigfbaegjiejgaihhahecfccefcfgdhgaaabeiibibgdcgdeajbbjceififfdebdjcigehdgdjbgajhjhigjifejjccheceabcgbafbibiibgiicefefhiceigjhijjafdeiafffgcacjdccadcbecieegfgbfdejiafdhdhhfcjhbfjbehdfdfgcbjijiiddcafaaedcacedfebcafhcibcghhcieihdjdgbeaddgdbjheedjgihffbcbiaccbcgibjgcfagjgcbhhbbaafagefgbfcfdfajecfdhdfjifbffcacfbeccdbfgieegefjdhgdffcfjfajafhggfdjhhfhabgdgfcjhjgjjgicahghegdjddabdiechjdcbaichjijbbgehfgadibgajgdebfgahiidibahabgbcbhfddgefjgjbhbjgjdhhfbccheibbfcebjciafgbgijchchedeahagbcbegjehjgfejhcgihcbiheggeehjcigbjebddcbbedfjieijjjbdafbcdhajchgbbhebeijgheaghjhfidceiediagjhggjchefdjfhbadihaaggdchfhfbdifbibbjahbfadihefeaedgcedgdffdjecdhbhfjebihfgfbcfgieedhcijcfgaiifedebbefbgbgaihiafgafbchggdbceeiiadcbgfbfedihbjidicifdjbggebcdcjbgjfabadfgifiiehfffdfbfidghdhjieiifehiccabechjhggfbcaeccghdchccjhchgcjhdehjjecfbfbgjbabjjdjcgadfaffiicgabheadagadhfchibdbdbfeghdhhcedghdfahcgcihaaaeabfbghijgbbbfjaejhidbaaefgeiihdgdfaeijihfifjdcdjjbjfifdbhdhgeiedfcfcecjeecjcaccjjedefabaaghfbcgdagbdbjggjgjgijcijbbbeddiahahhcbjieabehcjgajcihhdjbgjibbiidigjgifhdididaifcfadcghgfceidhicfegaacideifeighghaggdacdhaiaaffafgchgaffhfjhaddgiaigjefbeabgfeaaibabffiiadgfgcddhfiijahcdccichdeebajhfacajgcihhjccajfdehbaehbdfebcaafiahibjbchcfggicbddbhhbbcfghdehjijhggiidagebfdhaifeghajabbejcgcbigifbedgaagdcccagbeccifgfbdhaidddbdehcafbefcifjjiiibb"
    expected = 91067
    result = Solution().wonderfulSubstrings(word)
    assert expected == result


def test_5():
    "TLE"
    word = "cjcbjhieibjdhjediibjcihchgjafaaebdfedbhieeiefibfbfijcigijcjjabcbddhibjihihecdhdfdeihehcbejbiejaieebceddefdfcajhfdaaddccacjfhihhafgjbhfacbhfihiddjaadhbgabhjcjfbcciceaehicjafaeijaicfbdhbegdgeeiachifeggcbcbbifddbbdhiggfgebgfgjfcebbfecbaejihgbbbjajeaacggdighhgjhfcejiagecjefjcfageaebbdcafhhcjbdjbfebfdcdabgfdhhdjggehaajabbfbgbfhghihgidbifjbghifgajijccgabcgdaigdfeegeeihdebjbbdffchbfdfcjfjgihjafbdhbfcdcjcjcjjjdahbjcibiehaijegaeeahjhfiiaiececegeabgafgdehbecfahfecabgcbihgaghedjgjahagfihifgdbhfidfhdfefigdffachahihfgdaghbiigjgdhgbhjchifecgecafidahajhcffagcfiggbcdcchhieihciibechajhhgebiegdddjhdafidiiffhgieagfdfifgjadicacfajdhjeffeieebhfifcefahbcaihjcjababhbaejejahabgeiicgigaigiecfdfgjcfijfchiaiheccedcccgfjcjgbdghbjddcgdegidhacidhbiecahhdhhaiaddbhhghacddcjghcdighjchhihgjiaagggagjiibgfbdfjjcbiafecbhejjeifbciigaffhaagedhieejacjciihiddjgciicjgafidgjdfeffidehgjicaahagiadghjijaebeejijfhhgibjfbegdchibjbjbfhcabeggfadbdadghehacecbebiiifjeigeigjcbhhiejbajbfgbjaaieggbafgiefeiiibiaedicagfaegdcfegcaifcgecgjbahjeafachcidfgahjebciejbdddfjchbiahgdaaiibeiheiigbgeceifghedfbijbghgbgehgdejfjhcffacdeadeifhbcfieghjegjcjfggieghjdediahajijdfbcabcbdhefggbbdfchaceaediegicchgcahiechjefifhhiaehgcedhgaedadejjjbgacjejdgagjhjbfjefddfajhjacjejecbehcihfiacciidffecadjdjhfidacfddcbcagigadcahhjcbhdefbdegbihgdjjjbjhfgacjdfecfajjfbcfdcfhffehhdhfjfhehhghjceahahafhdcgacfgdajdcfehibhgeajigghajghiaefdiidfdjcejjbgfggbafceidfbadecjeeghiicbbejjbfcgfbgidfhfgjhdccichgedhbffadhaidbijjefjbefehfgbijbjfccfeadhbiacghgijfebdjjdgafdehgaajdhdfedhejahfihcfjfidffbgcejfgfgbgdegdejfffiedieaiiaifaiehfbgdajidcejfcbjiaahjbbgchaibddifcfifheefadegcfijbfdjbdigeajcabjdcigjgdeaagedbeaaiicggcbhgdfbdidegiegehfjjidijbcddfacffgdgdajabejbchhdfhdeijaafbehhcbcgdfihjciechiefjhebgedeafidjfaicjeahbbbfhjdcbeadehfccabjgagfbbejedfhcaheieiehhgfedjacghhcbbfecfbfiieafjeehdjfffdaagddhadeehhcbafgfjcghjedhhagdbcgijdcbcijbdaabafaiaffhgbgcfbefaacjdfciibeahdbhgajcaaihifgcchaahjhbbidhbdgdbfdhfbaajcbiiecjifjifdghfgefchgfgihcjebdghcdfhhfibehbfgggeeeifaigiagjifhhaeghhdeghbihhhdddediebihcbgifjcddibeagajfjaabhcdjjddafbfggiihdjihejfhcgagegehbhgeiefaiigeaaaafdaadgichbdaidjhcijegbhhbcgecfgbdecchbjeicaehfebigjbeaijfabgjcchigecbhbjbhghcjhifibhgechggeigjdjjdiafbcbhbccghgdjhhajacbhffhdggcihdhdbecdhegigehagbiheaghicgfceajbfihhhcedeghhihgccceeahigjddiaebaecagaibehidcaefbfdcgghjfjcgahbijchegjbbeaeegajghjdijibefeidiheabjjgfcgibbbhccjjhfadbffhcdfjjdggjaajdhdjefgdabcdcafjecbhjaicaacfejbgcheabdghfddchhgadbdddeaaaeiggcgifcijiabgehcefajdcijbieeiegcdhdiehfdjcgfjdjffjjcedcebbdbhfhcajbfiieigjcjcbiifcabhfibegffbdbdaecgbiedeggidcefcfgaagdjhiigidebiiaajfaffbbjabhhjaijgciaaijibcahcgbbjadcgjhgggcibijjifdadifgbeddjhcagjadifhaaedfjhebhbjjjadeajajfejgcebdhaiaaheibfaadhgjifacfabhacbjgaiiaidjegjbcfjcejjifjeihadibcfegcbhibhheejebfjbcaecebaajijehhffhfeccidcigdcfgdgeegafchjjfjbbgagdjfejfgdegfbbdgcjfdhgfhdhagefcabgjddhgefghfigjcehegcafhcdggcadifgjbjgdeibciaagedgdijifdibiccgjdgeahghfbjijjcjecaegdhbfdahdegeccigibeibgfggcacadedacadeijcdibadeibachieeabjjihfiiaifchgaebbbbcigfjceahhjfdifieagedejiadgihafhgdhgecahjhdbhejidicgegbfhicehhfeccjheeghagfcdcfjbjgjaeebbgccdjcjgjehfabjaafhgcgdjdddegibcbgafdaafddbfehfdgfcjgffddceehjaaaidjcjhfdcifgdgdfageaecheghgifebbjfbgbccgcfgbbgicjjcdajeiiijeeghigedecfeiggejahjadiddddijibgcgfedhicjegeahdibiafdehfgdfhhheacbjcichfdbidggaghacehifcgghfggbdjjhfdibidcaiefhjgecbgdieiibibfcihjgdefbgifebbjdhibidfjchjeegjcjdcgabgaceahiccaaiehbgdejfahebfiabddjaffbejjgcjfabdjedgjhggehfhidabdcaijbhcadhibabbhgfdbdffhhjdjebgagheaggehefajdghbdfgieaecihgajdjdjceafgecidecjfgeaiefbbhdbdheeagjjhfbfcagbdhcgfhihbibehbfibcifecgjbejagfgfighbigeefajhdgjeigcaceffchddajgijibgacbfcgbabcfhbhiafagcjhefiecjfcfjgbcbccjdffdbaihjfiabbgegfefaegaiahfcbfaaecdbgccbjiabbghcdbghahchiacdaijahfifffibdhfcffcgahbaegijegiijhehfhebedjdcgebeeedihffcfiggabihifbfhdhhegbagffffhgcbadabgfaiiaibafgiicjdfceedfeajdgijdbhcfdaciadeichbjdafgafbdjbbjhagegjfhbffibccaghjdbiffjfjfeaigccfjfbccfcidjbefifdgjgagbedcficfifhfgaaibgfhjigfhidfhgafaahicgbbidjgbdjbjebhadbhacbgjadhhbfahbjeiddjhhfccgcgaadcafjebghijbjdfaefiegafhdjfihdcicbhidfbjiefgdhfdabijaicfaahhceaajdfjcdeeafbgfjiahaeejhgficfgjegaieghajgjfcccefcggdbafihahgegehjghegfbbjdbeejihjeaeaaeeeiffggdibgadcbgbdhdefdhadcbiihbhjihjgjfdgfdgabiddcdbhcejjiaahhcfbdbcbbifhigbeiheedggggjaddfeegbjcbjbfibbehgeiegggbjegdfciicbeigeadgbafcbbadebjcfeiibidfhceeegjebbgddjgfcaagdhicicaehidefabiifaggibgbdfifhaihegeggbdibbgfhaffjhfjichfhajijdbafbeedeiiajgeiibceejdiiadhdaegbfhehjjceaiddiabaggedghfhdcfdjgejgcbggadfbebaaaddcfdgbeaaahibafiiebfbdjjgdggbaihehcjgghgcbjffijeihefbiiaejjafbfaddebihgefbgeeidbiibgidhjbgcegafficbgiaccbebahaadiabdjaadigdcbfhggiccgfdjiffehbedhadfjhighdedbaaaaghjadjfigjhgfbedbcbeeeiefeaideijgefehigdbgegdccehdajgafbdbadjcibfjgdeaaahhcfejaifijifdgdihficjfiehfhebdecggeebghddfhbcgbgaafgdbbfdfdgfahdiahjaajahjichhfcgdigbihjfeiefbchdbddcdcdedhigeebaafihcfddaiahaffjfjabchaibcjdghhgijaiaefeejhibjcedidffbdfjgehhagcecbddaijdgdddiiieajfgedefiehgfhjejcjadcdjbecjebbageajjijddbeeahahfijebhjaehaijdfcabeiiigfbecjffacbhicagbediejgicijafgbbiaehjdgjdijjadhhbfhfbieedfjbfaabceecjcfacfgiecfhichdhcgihgefcajchiddiifhaeihejdabebecbebijjjidfjcgacibhfecgjjedicfbafhfhdbbefechcjhjcgicaaecbjhabihahcdiibgjdjghejggjaibdccibbgehaabiibcdibjdadbefbjaaajagbdaabdhgacahaeabgcgijfjchbaeeabhdaiiiihbhghbajbhieejebbebeifccgieiadjaiddbbhfjfbdigicfiegjhfehidjefhaibcdeiiecgdecbhjjgdhbdjgdeigajfajiiieehgaaidgfbeefjgiebfdjdffgbddihchigdbafideiagejegiaifcgjdcjccbedgajdbbffagaahfgfifcfebbidgehbbafghadhcbegeieibajchhedhbacchgibfcfajcdgaijhghhgddcgihehaccghdidbiajfhahbihfecbeigcdideifehhgfifhhfjidifajbijjcgiejgdacfgicjedicddjighjiiajibjeghfegaagagfijidbaegididjfhggbecehfceifigcjhifjbfajjfhjjhgdiefdjhegjffehbdjifjcfbcacghicffbeahfjagaihheadfedgehafaidcacebdacfechaiidiefjedcdgfeaggdcgbghfgcfcgdaaijhdaedgaijeiadjbafccdhbccfdhffedjahgjfcbhbjbhafejbaadfhacdehabcafiijjehdjiajjcjiejcjhacieebjbcbgjfeageeacjeaihgbhdfefebdjajiggbcjijicffcigebcihaddjhabfgeeacefacgbagbaggjeajajeegeehahfgaihhejifcgeeddhddjcdbfhfebfadihjhghijggdbifeigcgcbagcihifaejabijaidgaficdaheaghgajfbgjgbcgcadgeeegiajejbcaihjffecdagibecafgadbjfbiddafeggjgfbfbegighhjdjgichebihifeigijfdecghcicajdigejcbgjhaigajcediachjabgjjfhdjehggbfdhhcbhfbcfiicjjdihdejcihdebadjhihdihdchcahgcgigabgfhcabahdfddefgffhhbehijgfcfedhdghghfajhghjbafgediiiadbbedhjbfajiciiibcegbhggebjigchecbidcdeagebfahfbaigecjegaaagcecgajfgifeejgegbidfdaedhahabgfejiibdcijhcjeecifhajffjhaagijaceehjhaegejaebccfeddiihiaajhgdhaijagfajfeaihcgejgffdiaeajedbeafgbdeccbaffjbddggbgfbfjicccchebjcgbbhficebbieicaaadfdehhhhdeeehgiddfahbageacbcibddibjihifcahebfifjbcaiiicehfeagedebjjgheijihdchedbhgiejjjjfifcbaagfffifbgfaecidcdddjbacdcgcjefaahaccgdhhbdhabdfgghebhcbhadehbfdfffchjbfeefefdeeehggjdabccicgeeahfdgfdfhfgbdahjecdebibdjcaihgcejhbagfbiajfiafahjedahdceiccbhfeigcechcagifgjbdhddfefhiibdbebjegchcecdhejjbhbibjicbcgbadjdfcacdajdgfddihijhechccabdijiehbjfhhedagihajfgahbgbjcfjbdhbcbebfiegiigjfdhaejhjbdcadgbcfjffgfhgfdjjfcbhagfcifaijjcbjfggfgghfibcgfijghfibdhbfghjgghjgbcfedhhabcdeieigjghbhefiffcajeahijijbageichjdcccfaaedbhiiiijjfhgjadajjdgbehfhdhfbdhhgdgefefcfebgbhjfedcejhcgfciefcjbbdhhcjhhjiidabadbjgajaifcdebicgcibjibbidiccbciehbbcjcaeeiehgjbacagbjadfdhjicacbcahcjcjdjdibhjhbdgddbhefcfghfhaagcdbecabjbecabhhjdgebfggdbbehgfjggjjbfigjggeeficcjbcedaeibfieghjccegiiehahjbeeibfaebjdhijhafiijibecaeebfacachjdhacihbfadaibjhgheiihcbjaedahcjghiaejajccjgifedjhdddfdjgiehbgjdjccdchhdbddefcjjfbhdafabbedcjahdhgejjghcghgjhedccdjfdgabafbcaajbiajhcddeahjijdhdgbaicdjaefbjffejabccejddgdecibciebjfcheiadidchaeiijdddgdhjbefjjicfghfhecjgfdfcgiabadbiejgjjgdajeabhhhgbdidgeibifjjcaabjcfgaejjibcgieeidahfjhcgbbfcjhjfbaahafchadbgjcihhgeaedchehjjifafbhjddiafichddgcefcejjhhfcbcdcjfghaaigehafhhaeecbiicbeicbfifabcbadjcijgdjgdjbjiefbabagificeheiaedeaajcdijdgcgffhhghfddhaidacbjhghebbbibeagcfjagdacgjfahfebcbediaigeiigcfebjdeehfdeccgihbjhjiddcjaijdjjahifhijijabcagjcjgjbbebghihhcgggdaciabghfgjbdhbbccccjggfaahhdadafabgfbaahbfedbbedcdhggfaciadjeffejefhjdchegdhhajbbbidfaegbjdcbaccfaefiehcajaffhcbbicihhgiifcebdefhbdeggdjjeibefbejhgdafjdahibgcfcjiidgdehachfjgdaegbhjbhehiacjdeggecfeddbaebgcfaffahgadjcajbbadadjeebhdfaeijcjejaefjhacaaedihfbifcadfeiificfiaihchfiiiagdfhfacacdddfbdagdacbjhdegcidihfcbdcggeiecdcfedahjehcedgcebgddjhbgchdceijeiecahcbbffaegeijbdigjfhbdcceibiahfcaegegfgjfcdjjcchjjfaibdihfcicdadhjgjaecbbjaccigigcihghigbiejaifjhdahbcicjiajeffcafhdjfddfddficfjieceagadcadgbbibdhhbdffibiighehaihjdbcieabgcfgdiaifffifheffjjgaebaafhhjbbgdcgbgehcigihdccibhjhefhifdcdachcgdhjbbhddjbgffaefdjggicicaffijhfeggajjjfdhifgajcbcbjhdjdfgihjjbggabifejgbddcgeaabbbafhjcccijfaaccgdebjebcdeifbhjeacibjiagaacjbddgijdidgbagbdfchgffdcgagecegabiaeijdiegaihhcgebecfbbccgeafifadedihchgiaagheejfdgjegahdidfjdgdigijhhiieajghbjfejajfifggfagcfabccdghbgfdfddhifaaadjdfibafdigchbdcfiihagfgabcigbbhbjecgfjccdfiehjaahbadhbdbejabhjehjjafjgbbacbgidhhfajjabaifjedjhegdagcfagjhjadehfedehhjbaefgbdicehbdjdh"
    expected = 430703
    result = Solution().wonderfulSubstrings(word)
    assert expected == result